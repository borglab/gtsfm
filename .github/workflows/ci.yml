name: CI

on:
  pull_request:
    paths-ignore:
      - "rtf_vis_tool/**"
      - "gtsfm/visualization/**"
  workflow_dispatch:

jobs:
  mamba-setup:
    name: Populate micromamba cache
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v5.0.0
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment_linux_cpuonly.yml
          cache-environment-key: environment-${{ github.sha }}

  test:
    name: Unit tests and python checks
    needs: mamba-setup
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v5.0.0
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment_linux_cpuonly.yml
          cache-environment-key: environment-${{ github.sha }}
      - name: Environment setup
        run: |
          bash .github/scripts/setup.sh
          pip install pytest-cov
          pip install flake8
          conda info
      - name: Flake check
        run: |
          set -e
          flake8 --max-line-length 120 --ignore E201,E202,E203,E231,W291,W293,E303,W391,E402,W503,E731 gtsfm tests
      - name: Unit tests
        run: |
          set -e
          pytest tests -m "not slow" --durations=0 --cov gtsfm \
            --ignore tests/repro_tests \
            --ignore tests/loader/test_argoverse_dataset_loader.py \
            --ignore tests/runner/test_frontend_runner.py \
            --ignore tests/frontend/correspondence_generator/test_mast3r_correspondence_generator.py
          coverage report
      - name: React-Three-Fiber app tests
        run: |
          set -e
          cd rtf_vis_tool && npm install --legacy-peer-deps && npm test

  benchmark:
    name: Benchmark
    if: ${{ !contains(github.event.pull_request.title, '[skip benchmarks]') }}
    needs: mamba-setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        #    config      dataset       lookahead  ext  source     loader       max-res  share-intrinsics
        # prettier-ignore
        config_dataset_info: [
            [sift      , door-12            , 15, JPG, test_data, olsson-loader , 1296, true],
            [lightglue , door-12            , 15, JPG, test_data, olsson-loader , 1296, true ],
            [sift      , skydio-8           , 15, jpg, wget     , colmap-loader ,  760, true ],
            [lightglue , skydio-8           , 15, jpg, wget     , colmap-loader ,  760, true ],
            [sift      , skydio-32          , 15, jpg, wget     , colmap-loader ,  760, true ],
            [lightglue , skydio-32          , 15, jpg, wget     , colmap-loader ,  760, true ],
            [sift      , palace-fine-arts-281,15, jpg, wget     , olsson-loader ,  320, true ],
            [lightglue , notre-dame-20      , 15, jpg, wget     , colmap-loader ,  760, false],
            [sift      , 2011205_rc3        , 15, png, wget     , astrovision   , 1024, true ],
            [lightglue , 2011205_rc3        , 15, png, wget     , astrovision   , 1024, true ],
            [sift      , gerrard-hall-100   , 15, jpg, wget     , colmap-loader ,  760, true ],
            [lightglue , gerrard-hall-100   , 15, jpg, wget     , colmap-loader ,  760, true ],
            [sift      , south-building-128 , 15, jpg, wget     , colmap-loader ,  760, true ],
            [lightglue , south-building-128 , 15, jpg, wget     , colmap-loader ,  760, true ]
          ]
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v5.0.0
      - name: Cache frontend
        uses: actions/cache@v4
        env:
          # Increase this value to reset cache
          CACHE_NUMBER_FRONTEND: 1
        with:
          path: cache
          key: ${{ matrix.config_dataset_info[0] }}-${{ matrix.config_dataset_info[1] }}-${{ matrix.config_dataset_info[2] }}-${{ matrix.config_dataset_info[6] }}-${{ env.CACHE_NUMBER_FRONTEND }}
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment_linux_cpuonly.yml
          cache-environment-key: environment-${{ github.sha }}
      - name: Environment setup
        run: |
          bash .github/scripts/setup.sh
          conda info
      - name: Prepare dataset
        run: |
          DATASET_NAME=${{ matrix.config_dataset_info[1] }}
          DATASET_SRC=${{ matrix.config_dataset_info[4] }}
          bash .github/scripts/download_single_benchmark.sh \
            $DATASET_NAME \
            $DATASET_SRC \
      - name: Run GTSFM
        run: |
          DATASET_NAME=${{ matrix.config_dataset_info[1] }}
          CONFIG_NAME=${{ matrix.config_dataset_info[0] }}
          MAX_FRAME_LOOKAHEAD=${{ matrix.config_dataset_info[2] }}
          LOADER_NAME=${{ matrix.config_dataset_info[5] }}
          MAX_RESOLUTION=${{ matrix.config_dataset_info[6] }}
          SHARE_INTRINSICS=${{ matrix.config_dataset_info[7] }}
          bash .github/scripts/execute_single_benchmark.sh \
            $DATASET_NAME \
            $CONFIG_NAME \
            $MAX_FRAME_LOOKAHEAD \
            $LOADER_NAME \
            $MAX_RESOLUTION \
            $SHARE_INTRINSICS

      - name: Archive dataset metrics, plots, and output data (camera poses + points)
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ matrix.config_dataset_info[0] }}-${{ matrix.config_dataset_info[1] }}-${{ matrix.config_dataset_info[2] }}-${{ matrix.config_dataset_info[3] }}-${{ matrix.config_dataset_info[4] }}-${{ matrix.config_dataset_info[5] }}-${{ matrix.config_dataset_info[6] }}-${{ matrix.config_dataset_info[7] }}.zip
          path: |
            result_metrics
            plots
            results
            dask_reports
